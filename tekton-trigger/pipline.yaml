apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: go-build-image
  annotations:
    "pipeline.tekton.dev/ttlSecondsAfterFinished": "30"
spec:
  params:
    - name: git-url # 默认string类型，所以不用指定type
    - name: revision
    - name: image-name
    - name: ref
    # - name: dockerfilePath
  workspaces:
    - name: go-build-workspace
  tasks:
    - name: git-clone
      taskRef:
        name: git-clone
      params:
        - name: url
          value: $(params.git-url)
        - name: revision
          value: $(params.revision)
      workspaces:
        - name: output
          workspace: go-build-workspace
    - name: git-tag
      taskRef:
        name: git-tag
      params:
        - name: ref
          value: "$(params.ref)"
    - name: go-build
      taskRef:
        name: go-build
      runAfter:
        - "git-clone"
      workspaces:
        - name: source
          workspace: go-build-workspace
    - name: docker-build-push
      when:
        - input: "$(tasks.git-tag.results.exists)"
          operator: in
          values: ["yes"]
      taskRef:
        name: kaniko
      runAfter:
        - "go-build"
        - "git-tag"
      params:
        - name: IMAGE
          value: "$(params.image-name):$(tasks.git-tag.results.tag)"
        - name: CONTEXT
          value: ""
        - name: DOCKERFILE
          value: "Dockerfile"
      workspaces:
        - name: source
          workspace: go-build-workspace
    - name: clean
      taskRef:
        name: clean
      runAfter:
        - "docker-build-push"
      workspaces:
        - name: output
          workspace: go-build-workspace
